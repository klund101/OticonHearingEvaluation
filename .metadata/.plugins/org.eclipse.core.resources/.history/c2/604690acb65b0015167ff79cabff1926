package com.example.hearing_evaluation;

import org.puredata.core.PdBase;

import android.support.v7.app.ActionBarActivity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;

public class IdentityActivity extends ActionBarActivity implements OnClickListener {
	
	Button newStartTestButton;
	EditText uName;
	public String uNameString;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_identity);
		
		initGui();
	}
	
	private void initGui() {
		newStartTestButton = (Button) findViewById(R.id.btnStartTest);
		newStartTestButton.setOnClickListener(this);
	}
	
	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.btnStartTest:
			uName   = (EditText)findViewById(R.id.userName);
			uNameString = uName.getText().toString();
			
			protected void onSaveInstanceState(Bundle outState) {
				super.onSaveInstanceState(outState);

				outState.putCharSequence("savedText", uNameString);

			}
			

			startActivity(new Intent(IdentityActivity.this, TestActivity.class)); //
			PdBase.sendBang("playTestTone");
		break;
		}
	}
	
	@Override
	protected void onSaveInstanceState(Bundle outState) {
	   super.onSaveInstanceState(outState);
	}

	@Override
	protected void onRestoreInstanceState(Bundle savedState) {
	   super.onRestoreInstanceState(savedState);
	}
	
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
	    if (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN
	            || keyCode == KeyEvent.KEYCODE_VOLUME_DOWN)
	        return true;
	    else
	        return true;
	}
	
	@Override
	public boolean onKeyUp(int keyCode, KeyEvent event) {
	    if (keyCode == KeyEvent.KEYCODE_VOLUME_UP 
	    		|| keyCode == KeyEvent.KEYCODE_VOLUME_DOWN)
	    	return true;
	    else if (keyCode == KeyEvent.KEYCODE_BACK){
	    	super.onBackPressed();
	    	return true;
	    }
		else
			return true;
	}
}
